"""
(20 баллов) Напишите функцию, которая вычисляет значение будущей стоимости
(FV) по формуле сложных процентов FV=S(1+p)^n,
где S – первоначальная стоимость, p – процентная ставка,
n – количество периодов, и возвращает строку вида: 
100.00*(1+0.50)**50.00=1610.51 (для S=100, n=50, p=5%). Все числа выводятся с 2 знаками после запятой. 
S, p, n – параметры функции. Если значение какого-либо параметра меньше или равно нулю, то возвращается сообщение «Ошибка в данных».
(10 баллов) Создайте с помощью присваивания список кортежей из трех чисел (S, n, p). Вызовите созданную функцию для данных из этого списка и сохраните результаты работы функции в текстовый файл.
(10 баллов) Если какой-либо параметр не является числом, функция генерирует собственное исключение. Добавьте в программу обработку исключений (как собственного, так и стандартных).
"""


def counter(S, p, n):
    # Так просто удобнее проверять на тип:
    check_tuple = (S, p, n)
    for e in check_tuple:
        if type(e) != int and type(e) != float:
            raise ValueError()

    # Если есть ошибка, то возврат
    if S <= 0 or p <= 0 or n <= 0:
        return "Ошибка в данных"

    # Проценты
    p = p * 0.01

    # Вычисляем FV по формуле из задания
    FV = S * pow(1 + p, n)

    # Переводим числа в строку с добавлением нулей после запятой
    S_str = format(S, '.2f')
    p_str = format(p, '.2f')
    n_str = format(n, '.2f')
    FV_str = format(FV, '.2f')

    # Формирование выходной строки
    out_str = S_str + " * (1 + " + p_str + ") ** " + n_str + " = " + FV_str

    # Отдача строки
    return out_str


if __name__ == "__main__":

    # Список с элементами
    elements_list = [
        (10, 40, 1),
        (52, 10, 4),
        (29, 194, 3),
        (25, 59, 2),
        (-1, 23, 1034),
    ]

    # Цикл по каждому элементу
    for e in elements_list:

        try:

            # Получили результат
            result = counter(*e)

            # Сформировали строку для записи в файл
            S, p, n = e
            wirter_str = "\nДанные: S = " + str(S) + ", p = " + str(p) + ", n = " + str(
                n) + "\nРезультат: " + result + "\n"
            # Выводим на всякий случай на экран
            print(wirter_str)

            # Открыли файл на дозапись с аргументом a (не w)
            with open("results.txt", "a") as file:
                # И записали строку
                file.write(wirter_str)

        except ValueError:
            print("Некорректный тип параметров метода")

        except Exception as e:
            print("Неожиданная ошибка:", e)
