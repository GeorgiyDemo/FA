"""
(20 баллов) Имеется список кортежей вида (товар, цена). Например, [(″ручка″, 25), (″фломастеры″, 350), (″альбом″, 350)]. 
Создайте функцию, которая для такого списка находит самый дорогой товар. Если таких товаров несколько, то все.
Список является параметром, функция возвращает список товаров и их цену.
(10 баллов) Создайте с помощью присваивания список указанного вида. Вызовите созданную функцию. 
Выведите на экран названия товаров и их цену в виде строки  «фломастеры, альбом – самые дорогие товары, цена – 350 руб.»
(10 баллов) Если исходный список пуст или параметр не является списком, то функция генерирует собственное исключение.
Добавьте в программу обработку исключений (как собственного, так и стандартных).
"""


def get_items(items_list):

    # Если список пуст или тип не list, то выкидываем исключение
    if items_list == [] or type(items_list) != list:
        raise ValueError("Некорректные данные", "Список пуст или параметр не является списком")

    max_price = 0
    out_list = []
    # Для каждого tuple-элемента списка
    for e in items_list:

        # Если цена больше
        if e[1] > max_price:

            # Очистка списка
            out_list.clear()
            # Добавление в список
            out_list.append(e)
            # Выставление новой цены
            max_price = e[1]

        # Иначе, если цена такая же, то просто добавляем в список
        elif e[1] == max_price:
            out_list.append(e)

    # Возврат значения
    return out_list


def main():

    locale_list = [("ручка", 25), ("фломастеры", 350), ("альбом", 350)]
    try:
        # Получение результата от функции
        result_list = get_items(locale_list)

    except ValueError as e:
        print("Ошибка ValueError:", e)
        return

    except Exception as e:
        print("Непредвиденная ошибка:", e)
        return

    # Объявление временного списка для названий товаров
    buf_list = []
    
    # Цикл по каждому результату
    for name, price in result_list:

        # Добавляем название товара в список
        buf_list.append(name)

    # Формирование выходной строки из временного списк
    out_str = ", ".join(buf_list)


    # Добавляем оформление + цену
    out_str += " – самые дорогие товары, цена – " + str(price) + " руб."
    print(out_str)

if __name__ == "__main__":
    main()