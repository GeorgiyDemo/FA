"""
(20 баллов) Имеется список строк вида «товар: количество» (товар может повторяться), 
например, [“ручки: 5”, “тетради: 30”, “ручки: 10”].

Напишите функцию, которая для этого списка вычисляет общее количество каждого товара.
Функция возвращает словарь вида {“ручки”: 15, “тетради”: 30}.

(10 баллов) Создайте с помощью присваивания список указанного вида.
Вызовите созданную функцию.
Выведите на экран результат в виде таблицы из 2 столбцов: товар, количество.
Выведите количество различных товаров в исходном списке.

(10 баллов) Если исходный список пуст или параметр не является списком, то функция генерирует собственное исключение.
Добавьте в программу обработку исключений (как собственного, так и стандартных).
"""


def list2dict(list_str):
    if list_str == [] or type(list_str) != list:
        raise ValueError("Некорректные параметры функции")

    # выходной словарь
    out_d = {}

    # Цикл по каждому элементу
    for e in list_str:

        # Разбиваем по ключу - значению
        key, count = e.split(" ")

        # Конверт кол-ва из строки в число
        count = int(count)

        # Выкидываем двоеточие
        key = key[:len(key) - 1]

        # Если ключа нет в словаре, то создаём его и мутим значние
        if key not in out_d:
            out_d[key] = count
        # Иначе он есть и прибавляем колво
        else:
            out_d[key] += count

    return out_d


if __name__ == "__main__":
    # Исходный список
    input_list = ["ручки: 5", "тетради: 30", "ручки: 10", "тетради: 300"]

    try:
        # Получаем результат
        result = list2dict(input_list)

        # Выводим таблицу с элементами
        print("Товар     Количество")
        for k, v in result.items():
            print(k, "    ", v)

        # Выводим кол-во различных товаров в исходном списке
        print("\nКол-во различных товаров:", len(result))

    except ValueError as e:
        print("ValueError:", e)

    except Exception as e:
        print("Неожиданная ошибка:", e)
